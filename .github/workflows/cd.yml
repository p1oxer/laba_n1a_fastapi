name: Continuous Deployment - test

# Триггеры: push (ветки и теги), pull request
on:
  push:
    branches: ["docker"]      # Срабатывает при пуше в ветку 'docker'
    tags: ["*"]               # Срабатывает при создании любого тега
  pull_request:
    branches: ["docker"]      # Срабатывает при PR в ветку 'docker'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Задача для запуска тестов
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Create .env file from secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
      - name: Run tests
        run: |
          pytest 

  # Задача для сборки и публикации Docker-образа
  build-and-push-image:
    needs: test               # Выполняется только после успешного завершения тестов
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}